{
	"name": "Customers",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CloudsalesCustomers",
						"type": "DatasetReference"
					},
					"name": "CloudsalesCustomers"
				},
				{
					"dataset": {
						"referenceName": "CloudsalesAddresses",
						"type": "DatasetReference"
					},
					"name": "CloudsalesAddresses"
				},
				{
					"dataset": {
						"referenceName": "FourthcoffeeCustomers",
						"type": "DatasetReference"
					},
					"name": "FourthCoffeeCustomers"
				},
				{
					"dataset": {
						"referenceName": "ds_VACustomers",
						"type": "DatasetReference"
					},
					"name": "VACustomers"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Customers",
						"type": "DatasetReference"
					},
					"name": "Customers"
				}
			],
			"transformations": [
				{
					"name": "NewColsAddedCloudsales"
				},
				{
					"name": "NewColsAddedCloudsalesAddr"
				},
				{
					"name": "CloudsalesCustomerAddr"
				},
				{
					"name": "DateColumns"
				},
				{
					"name": "CloudsalesCustomerAddresses"
				},
				{
					"name": "NewColsAddedFC"
				},
				{
					"name": "NewColsAddedVA"
				},
				{
					"name": "Union1"
				}
			],
			"script": "\n\nsource(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as timestamp,\n\t\tUpdatedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> CloudsalesCustomers\nsource(output(\n\t\tAddressID as string,\n\t\tCustomerID as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tCreatedDate as timestamp,\n\t\tUpdatedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> CloudsalesAddresses\nsource(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as date,\n\t\tUpdatedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> FourthCoffeeCustomers\nsource(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> VACustomers\nCloudsalesCustomers derive(SourceSystemId = 1,\n\t\tGlobalCustomerID = uuid()) ~> NewColsAddedCloudsales\nCloudsalesAddresses derive(SourceSystemId = 1,\n\t\tGlobalCustomerID = uuid()) ~> NewColsAddedCloudsalesAddr\nNewColsAddedCloudsales, NewColsAddedCloudsalesAddr join(CloudsalesCustomers@CustomerID == CloudsalesAddresses@CustomerID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> CloudsalesCustomerAddr\nCloudsalesCustomerAddr derive(CustomerCreatedDate = iif(CloudsalesCustomers@CreatedDate>CloudsalesAddresses@CreatedDate,CloudsalesCustomers@CreatedDate,CloudsalesAddresses@CreatedDate),\n\t\tCustomerUpdatedDate = iif(CloudsalesCustomers@UpdatedDate>CloudsalesAddresses@UpdatedDate,CloudsalesCustomers@UpdatedDate,CloudsalesAddresses@UpdatedDate )) ~> DateColumns\nDateColumns select(mapColumn(\n\t\tLastName,\n\t\tFirstName,\n\t\tPhoneNumber,\n\t\tSourceSystemCustomerID = NewColsAddedCloudsales@GlobalCustomerID,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tState,\n\t\tZipCode,\n\t\tSourceSystemIdID = NewColsAddedCloudsalesAddr@SourceSystemId,\n\t\tGlobalCustomerID = NewColsAddedCloudsalesAddr@GlobalCustomerID,\n\t\tCustomerCreatedDate,\n\t\tCustomerUpdatedDate\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> CloudsalesCustomerAddresses\nFourthCoffeeCustomers derive(SourceSystemId = 2,\n\t\tGlobalCustomerID = uuid()) ~> NewColsAddedFC\nVACustomers derive(SourceSystemId = 3,\n\t\tGlobalCustomerID = uuid()) ~> NewColsAddedVA\nCloudsalesCustomerAddresses, NewColsAddedFC, NewColsAddedVA union(byName: true)~> Union1\nUnion1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> Customers"
		}
	}
}