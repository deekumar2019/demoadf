{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-openhack-MDW"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Streaming_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Southridge_Streaming",
								"type": "DatasetReference"
							},
							"name": "SouthridgeStreaming"
						},
						{
							"dataset": {
								"referenceName": "VanArsDelStreaming",
								"type": "DatasetReference"
							},
							"name": "VanArsDelStreaming"
						},
						{
							"dataset": {
								"referenceName": "FourthCoffeeStreaming",
								"type": "DatasetReference"
							},
							"name": "FourthCoffeeStreaming"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Streaming",
								"type": "DatasetReference"
							},
							"name": "Streaming"
						}
					],
					"transformations": [
						{
							"name": "NewColsAdded"
						},
						{
							"name": "StreamingConformed"
						},
						{
							"name": "NewColsVAnArsdel"
						},
						{
							"name": "VanArsDelConformed"
						},
						{
							"name": "NewColsFourthCoffee"
						},
						{
							"name": "FourthCoffeeConformed"
						},
						{
							"name": "UnionAllConformed"
						}
					],
					"script": "\n\nsource(output(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tStreamStart as timestamp,\n\t\tStreamEnd as timestamp,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SouthridgeStreaming\nsource(output(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tRentalDate as string,\n\t\tReturnDate as string,\n\t\tRentalCost as string,\n\t\tLateFee as string,\n\t\tRewindFlag as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> VanArsDelStreaming\nsource(output(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tRentalDate as string,\n\t\tReturnDate as string,\n\t\tRentalCost as string,\n\t\tLateFee as string,\n\t\tRewindFlag as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> FourthCoffeeStreaming\nSouthridgeStreaming derive(SourceID = 1,\n\t\tUniqueOrderID = concat('1',TransactionID),\n\t\tUniqueMovieID = concat('1',MovieID),\n\t\tUniqueCustomerID = concat('1',CustomerID)) ~> NewColsAdded\nNewColsAdded select(mapColumn(\n\t\tTransactionID,\n\t\tCustomerID,\n\t\tMovieID,\n\t\tStreamStart,\n\t\tStreamEnd,\n\t\tSourceID,\n\t\tUniqueOrderID,\n\t\tUniqueMovieID,\n\t\tUniqueCustomerID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StreamingConformed\nVanArsDelStreaming derive(SourceID = 2,\n\t\tUniqueOrderID = concat('2',TransactionID),\n\t\tUniqueMovieID = concat('2'+MovieID),\n\t\tUniqueCustomerID = concat('1',CustomerID),\n\t\tStreamStart = toTimestamp((concat(left(RentalDate,4),'-',substring(RentalDate, 5, 2),'-',substring(RentalDate,7,2),' 00:00:00'))),\n\t\tStreamEnd = toTimestamp(concat(left(ReturnDate,4),'-',substring(ReturnDate, 5, 2),'-',substring(ReturnDate,7,2),' 00:00:00'))) ~> NewColsVAnArsdel\nNewColsVAnArsdel select(mapColumn(\n\t\tTransactionID,\n\t\tCustomerID,\n\t\tMovieID,\n\t\tSourceID,\n\t\tUniqueOrderID,\n\t\tUniqueMovieID,\n\t\tUniqueCustomerID,\n\t\tStreamStart,\n\t\tStreamEnd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> VanArsDelConformed\nFourthCoffeeStreaming derive(SourceID = 3,\n\t\tUniqueOrderID = concat('3',TransactionID),\n\t\tUniqueMovieID = concat('3',MovieID),\n\t\tUniqueCustomerID = concat('3',CustomerID),\n\t\tStreamStart = toTimestamp((concat(left(RentalDate,4),'-',substring(RentalDate, 5, 2),'-',substring(RentalDate,7,2),' 00:00:00'))),\n\t\tStreamEnd = toTimestamp(concat(left(ReturnDate,4),'-',substring(ReturnDate, 5, 2),'-',substring(ReturnDate,7,2),' 00:00:00'))) ~> NewColsFourthCoffee\nNewColsFourthCoffee select(mapColumn(\n\t\tTransactionID,\n\t\tCustomerID,\n\t\tMovieID,\n\t\tSourceID,\n\t\tUniqueOrderID,\n\t\tUniqueMovieID,\n\t\tUniqueCustomerID,\n\t\tStreamStart,\n\t\tStreamEnd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> FourthCoffeeConformed\nStreamingConformed, VanArsDelConformed, FourthCoffeeConformed union(byName: true)~> UnionAllConformed\nUnionAllConformed sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> Streaming"
				}
			},
			"dependsOn": []
		}
	]
}